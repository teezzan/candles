// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package s3

import (
	"context"
	"sync"
)

// Ensure, that ClientMock does implement Client.
// If this is not the case, regenerate this file with moq.
var _ Client = &ClientMock{}

// ClientMock is a mock implementation of Client.
//
//	func TestSomethingThatUsesClient(t *testing.T) {
//
//		// make and configure a mocked Client
//		mockedClient := &ClientMock{
//			DownloadLargeObjectFunc: func(ctx context.Context, objectKey string) ([]byte, error) {
//				panic("mock out the DownloadLargeObject method")
//			},
//			GeneratePresignedURLFunc: func(ctx context.Context, key string) (string, error) {
//				panic("mock out the GeneratePresignedURL method")
//			},
//			ListBucketsFunc: func(ctx context.Context) error {
//				panic("mock out the ListBuckets method")
//			},
//		}
//
//		// use mockedClient in code that requires Client
//		// and then make assertions.
//
//	}
type ClientMock struct {
	// DownloadLargeObjectFunc mocks the DownloadLargeObject method.
	DownloadLargeObjectFunc func(ctx context.Context, objectKey string) ([]byte, error)

	// GeneratePresignedURLFunc mocks the GeneratePresignedURL method.
	GeneratePresignedURLFunc func(ctx context.Context, key string) (string, error)

	// ListBucketsFunc mocks the ListBuckets method.
	ListBucketsFunc func(ctx context.Context) error

	// calls tracks calls to the methods.
	calls struct {
		// DownloadLargeObject holds details about calls to the DownloadLargeObject method.
		DownloadLargeObject []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// ObjectKey is the objectKey argument value.
			ObjectKey string
		}
		// GeneratePresignedURL holds details about calls to the GeneratePresignedURL method.
		GeneratePresignedURL []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Key is the key argument value.
			Key string
		}
		// ListBuckets holds details about calls to the ListBuckets method.
		ListBuckets []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
		}
	}
	lockDownloadLargeObject  sync.RWMutex
	lockGeneratePresignedURL sync.RWMutex
	lockListBuckets          sync.RWMutex
}

// DownloadLargeObject calls DownloadLargeObjectFunc.
func (mock *ClientMock) DownloadLargeObject(ctx context.Context, objectKey string) ([]byte, error) {
	if mock.DownloadLargeObjectFunc == nil {
		panic("ClientMock.DownloadLargeObjectFunc: method is nil but Client.DownloadLargeObject was just called")
	}
	callInfo := struct {
		Ctx       context.Context
		ObjectKey string
	}{
		Ctx:       ctx,
		ObjectKey: objectKey,
	}
	mock.lockDownloadLargeObject.Lock()
	mock.calls.DownloadLargeObject = append(mock.calls.DownloadLargeObject, callInfo)
	mock.lockDownloadLargeObject.Unlock()
	return mock.DownloadLargeObjectFunc(ctx, objectKey)
}

// DownloadLargeObjectCalls gets all the calls that were made to DownloadLargeObject.
// Check the length with:
//
//	len(mockedClient.DownloadLargeObjectCalls())
func (mock *ClientMock) DownloadLargeObjectCalls() []struct {
	Ctx       context.Context
	ObjectKey string
} {
	var calls []struct {
		Ctx       context.Context
		ObjectKey string
	}
	mock.lockDownloadLargeObject.RLock()
	calls = mock.calls.DownloadLargeObject
	mock.lockDownloadLargeObject.RUnlock()
	return calls
}

// GeneratePresignedURL calls GeneratePresignedURLFunc.
func (mock *ClientMock) GeneratePresignedURL(ctx context.Context, key string) (string, error) {
	if mock.GeneratePresignedURLFunc == nil {
		panic("ClientMock.GeneratePresignedURLFunc: method is nil but Client.GeneratePresignedURL was just called")
	}
	callInfo := struct {
		Ctx context.Context
		Key string
	}{
		Ctx: ctx,
		Key: key,
	}
	mock.lockGeneratePresignedURL.Lock()
	mock.calls.GeneratePresignedURL = append(mock.calls.GeneratePresignedURL, callInfo)
	mock.lockGeneratePresignedURL.Unlock()
	return mock.GeneratePresignedURLFunc(ctx, key)
}

// GeneratePresignedURLCalls gets all the calls that were made to GeneratePresignedURL.
// Check the length with:
//
//	len(mockedClient.GeneratePresignedURLCalls())
func (mock *ClientMock) GeneratePresignedURLCalls() []struct {
	Ctx context.Context
	Key string
} {
	var calls []struct {
		Ctx context.Context
		Key string
	}
	mock.lockGeneratePresignedURL.RLock()
	calls = mock.calls.GeneratePresignedURL
	mock.lockGeneratePresignedURL.RUnlock()
	return calls
}

// ListBuckets calls ListBucketsFunc.
func (mock *ClientMock) ListBuckets(ctx context.Context) error {
	if mock.ListBucketsFunc == nil {
		panic("ClientMock.ListBucketsFunc: method is nil but Client.ListBuckets was just called")
	}
	callInfo := struct {
		Ctx context.Context
	}{
		Ctx: ctx,
	}
	mock.lockListBuckets.Lock()
	mock.calls.ListBuckets = append(mock.calls.ListBuckets, callInfo)
	mock.lockListBuckets.Unlock()
	return mock.ListBucketsFunc(ctx)
}

// ListBucketsCalls gets all the calls that were made to ListBuckets.
// Check the length with:
//
//	len(mockedClient.ListBucketsCalls())
func (mock *ClientMock) ListBucketsCalls() []struct {
	Ctx context.Context
} {
	var calls []struct {
		Ctx context.Context
	}
	mock.lockListBuckets.RLock()
	calls = mock.calls.ListBuckets
	mock.lockListBuckets.RUnlock()
	return calls
}
